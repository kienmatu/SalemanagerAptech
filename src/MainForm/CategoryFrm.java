/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainForm;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author datthanhsl00
 */
public class CategoryFrm extends javax.swing.JFrame {
private String luaChon = "ADD";
    private final static String unitName = "SaleManagerProjectPU";
    private static final EntityManager entityManager = Persistence.createEntityManagerFactory(unitName).createEntityManager();
    /**
     * Creates new form CategoryFrm
     */
    public CategoryFrm() {
        initComponents();
        this.setLocationRelativeTo(null);
        setDataforTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbbLuaChon = new javax.swing.JComboBox<>();
        lbCheck = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtCategoryID = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtCategoryName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategory = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 153, 255));
        jLabel9.setText("ENTER CATEGORY INFORMATION");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 153, 255));
        jLabel10.setText("CATEGORY ID");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 153, 255));
        jLabel11.setText("CUSTOMER NAME");

        cbbLuaChon.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbbLuaChon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADD", "EDIT", "DELETE", "EMPTY" }));
        cbbLuaChon.setBorder(null);
        cbbLuaChon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbbLuaChon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbLuaChonItemStateChanged(evt);
            }
        });
        cbbLuaChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLuaChonActionPerformed(evt);
            }
        });

        lbCheck.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbCheck.setForeground(new java.awt.Color(255, 0, 51));

        txtCategoryID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/check.png"))); // NOI18N
        jButton1.setText("OK");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        txtCategoryName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCategoryName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0,Color.WHITE));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 102, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCategoryName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCategoryID, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel9))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbbLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(lbCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        tblCategory.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tblCategory.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblCategory.setGridColor(new java.awt.Color(255, 255, 255));
        tblCategory.setOpaque(false);
        tblCategory.setRowHeight(30);
        tblCategory.setRowMargin(5);
        tblCategory.setShowHorizontalLines(false);
        tblCategory.setShowVerticalLines(false);
        tblCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCategory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbLuaChonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbLuaChonItemStateChanged
        if (evt.getItem() == "ADD" && evt.getStateChange() == ItemEvent.SELECTED) {
            luaChon = "ADD";
        } else if (evt.getItem() == "EDIT" && evt.getStateChange() == ItemEvent.SELECTED) {
            luaChon = "EDIT";
        } else if (evt.getItem() == "DELETE" && evt.getStateChange() == ItemEvent.SELECTED) {
            luaChon = "DELETE";
        } else if (evt.getItem() == "EMPTY" && evt.getStateChange() == ItemEvent.SELECTED) {
            luaChon = "EMPTY";
        }
    }//GEN-LAST:event_cbbLuaChonItemStateChanged
    
        private void lockField(){
        //txtCustID.setEditable(false);
        txtCategoryName.setEditable(false);
    }
    
    private void releaseField(){
        //txtCustID.setEditable(false);
        txtCategoryName.setEditable(true);

    }
    
    private void resetField() {
        txtCategoryID.setText("");
        txtCategoryName.setText("");
    }
    
    private void cbbLuaChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLuaChonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLuaChonActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (null != luaChon) {
            switch (luaChon) {
                case "ADD":
                lockField();
                if (addCustomer()) {
                    JOptionPane.showMessageDialog(null, "ADD CATEGORY " + txtCategoryName.getText() + " Successfully");
                    resetField();

                } else {
                    JOptionPane.showMessageDialog(null, "An error occured!");
                }
                setDataforTable();
                releaseField();
                break;
                case "EDIT":
                lockField();
                if (EditCust()) {
                    JOptionPane.showMessageDialog(null, "EDIT CATEGORY " + txtCategoryName.getText() + " Successfully");
                    resetField();

                } else {
                    JOptionPane.showMessageDialog(null, "An error occured!");
                }
                setDataforTable();
                releaseField();
                break;
                case "DELETE":
                lockField();
                if (DeleteCust()) {
                    JOptionPane.showMessageDialog(null, "DELETE CATEGORY " + txtCategoryName.getText() + " Successfully");
                    resetField();

                } else {
                    JOptionPane.showMessageDialog(null, "An error occured!");
                }
                setDataforTable();
                releaseField();
                break;
                case "EMPTY":
                resetField();
                break;
                default:
                break;
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked
private boolean addCustomer() {
        EntityTransaction tran = null;
        if(checkName() == true) //  neu username ma khong co dau, tuc la chi co cac ky tu tu a-z "[A-Za-z0-9_]+"
        {
        try {
            String name = txtCategoryName.getText();
            tran = entityManager.getTransaction();
            Entity.Category category = new Entity.Category();
            category.setCategoryname(name);
            tran.begin();
            entityManager.persist(category);
            tran.commit();

            return true;
        } catch (Exception e) {
            if (tran != null && tran.isActive()) {
                tran.rollback();
//                JOptionPane.showMessageDialog(null, e);

            }
            //JOptionPane.showMessageDialog(null, e);
            return false;
        }
        }
        else
        {
            if(checkName() == false)
            {
            JOptionPane.showMessageDialog(null, "PLEASE CHECK NAME !");
            return false;
            }          
            else 
            {
            JOptionPane.showMessageDialog(null, "PLEASE CHECK PHONENUMBER!");
            return false;
            }
           
        }

    }   
    
    private boolean EditCust() {
        EntityTransaction tran = null;
        if(checkName() == true ) //  neu username ma khong co dau, tuc la chi co cac ky tu tu a-z "[A-Za-z0-9_]+"
        {
try {
            int ID = Integer.parseInt(txtCategoryID.getText());   
            tran = entityManager.getTransaction();
            Entity.Customer customer = entityManager.find(Entity.Customer.class, ID);
            tran.begin(); 
            customer.setCustname(txtCategoryName.getText());
            tran.commit();

            return true;
        } catch (Exception e) {
            if (tran != null && tran.isActive()) {
                tran.rollback();
                //JOptionPane.showMessageDialog(null, e);

            }
            //JOptionPane.showMessageDialog(null, e);
            return false;
        }
        }
        else
        {
            if(checkName() == false)
            {
            JOptionPane.showMessageDialog(null, "PLEASE CHECK NAME !");
            return false;
            }
     
            else 
            {
            JOptionPane.showMessageDialog(null, "PLEASE CHECK PHONENUMBER!");
            return false;
            }
           
        }

    }  
    
    private boolean DeleteCust() {
        EntityTransaction tran = null;
        try {
            int ID = Integer.parseInt(txtCategoryID.getText());
          //  String username = txtCustID.getUIClassID();
            EntityManager entityManager = Persistence.createEntityManagerFactory(unitName).createEntityManager();
            tran = entityManager.getTransaction();
            Entity.Category category = entityManager.find(Entity.Category.class, ID); // hàm này lấy theo trường PRIMARY KEY
            tran.begin();
            entityManager.remove(category);
            tran.commit();

            return true;
        } catch (Exception e) {
            if (tran != null && tran.isActive()) {
                tran.rollback();
                //JOptionPane.showMessageDialog(null, e);

            }
            //JOptionPane.showMessageDialog(null, e);
            return false;
        }
    }
     private void setColor(JPanel panel) {
        panel.setBackground(new java.awt.Color(0, 51, 255));
    }

    private void resetColor(JPanel panel) {
        panel.setBackground(new java.awt.Color(45, 118, 232));
    }
    private void tblCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoryMouseClicked
        int r = tblCategory.getSelectedRow();
        TableModel model = tblCategory.getModel();
        if (r != -1) {
            
            txtCategoryID.setText(model.getValueAt(r, 0) != null ? model.getValueAt(r, 0).toString() : "");
            txtCategoryID.enable(false);
            txtCategoryName.setText(model.getValueAt(r, 1) != null ? model.getValueAt(r, 1).toString() : "");
        }
        cbbLuaChon.setSelectedIndex(1);
    }//GEN-LAST:event_tblCategoryMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryFrm().setVisible(true);
            }
        });
    }
    private void setDataforTable() {
        try {
            tblCategory.setModel(new DefaultTableModel());
            //EntityManager entityManager = Persistence.createEntityManagerFactory(unitName).createEntityManager();
            Query query = entityManager.createNamedQuery("Category.findAll");
            List<Entity.Category> resultList = query.getResultList();

            Vector<String> tableHeaders = new Vector<String>();
            Vector tableData = new Vector();
            tableHeaders.add("ID");
            tableHeaders.add("Category Name");

            for (Entity.Category e : resultList) {
                // Employee e = (Employee) o;
                Vector<Object> oneRow = new Vector<Object>();
                //String strDate = new SimpleDateFormat("MM/dd/yyyy").format((Date));
                oneRow.add(e.getCategoryid());
                oneRow.add((e.getCategoryname()));               
               
                tableData.add(oneRow);
            }
            DefaultTableModel aModel = new DefaultTableModel(tableData, tableHeaders) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            this.tblCategory.setModel(aModel);
        } catch (Exception he) {
            he.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbbLuaChon;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCheck;
    private javax.swing.JTable tblCategory;
    private javax.swing.JTextField txtCategoryID;
    private javax.swing.JTextField txtCategoryName;
    // End of variables declaration//GEN-END:variables
private boolean checkName() {
        String name = this.txtCategoryName.getText(); // lay user name
        //boolean valid = (username != null) && username.matches("[A-Za-z0-9_]+");
        Pattern pattern = Pattern.compile("[A-Za-z0-9_]+");
        boolean valid = (name != null) && pattern.matcher(name).matches();
        return valid;
    }
}
